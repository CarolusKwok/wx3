library(wx3)
usethis::use_r("load_fileset")
usethis::use_r("load_filesetSTM")
usethis::use_r("load_filesetSEQ")
logo::R
base::R.home()
library(wx3)
wx3:::load_fileset.STMengine()
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
RCurl::getBinaryURL(url = "google.com")
tryCatch(RCurl::getBinaryURL(url = "google.com"),)
tryCatch(RCurl::getBinaryURL(url = "google.com"), error = function(e){"NA"})
tryCatch(RCurl::getBinaryURL(url = "google.com"), error = function(e){"FAIL"})
tryCatch(RCurl::getBinaryURL(url = "google.com"), error = function(e){"FAIL"}, finally = "YO")
tryCatch(RCurl::getBinaryURL(url = "google.com"), error = function(e){"FAIL"}, finally = function(){"GOOD"})
tryCatch(RCurl::getBinaryURL(url = "google.com"), error = function(e){"FAIL"}, finally = function(){"GOOD"})
tryCatch({RCurl::getBinaryURL(url = "google.com")}, error = function(e){"FAIL"})
tryCatch({RCurl::getBinaryURL(url = "google.com")
return("GOOD")}, error = function(e){"FAIL"})
tryCatch({RCurl::getBinaryURL(url = "google.com")
return("GOOD")}, error = function(e){"FAIL"})
tryCatch(function(){RCurl::getBinaryURL(url = "google.com")
return("GOOD")}, error = function(e){"FAIL"})
tryCatch(function(){
RCurl::getBinaryURL(url = "google.com")
return("GOOD")}, error = function(e){"FAIL"})
tryCatch(function(){
RCurl::getBinaryURL(url = "google.com")
return("GOOD")}, error = function(e){"FAIL"})
if("#fail" %in% data_download$success){
wx3:::sys_warn(message = c("Error: Download incomplete"))
} else {
data_download =
}
wx3:::sys_warn(message = c("Error: Download incomplete"))
wx3:::sys_warn(message = c("x" = "Error: Download incomplete",
"i" = "fshjaf"))
wx3:::sys_warn(message = c("x" = "Error: Download incomplete",
"i" = "Error due to network failure at one point of the attempt"))
match(x = "#FAIL", table = c("#FAIL", "#GOOD", "fuck"))
as.logical(match(x = "#FAIL", table = c("#FAIL", "#GOOD", "fuck")))
system.time(as.logical(match(x = "#FAIL", table = c("#FAIL", "#GOOD", "fuck"))))
system.time(as.logical(match(x = "#FAIL", table = c("#FAIL", "#GOOD", "fuck"))))
system.time(as.logical(match(x = "#FAIL", table = c(c("#GOOD", "fuck"), "#FAIL"))))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 1000000), "#FAIL"))))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 99999999999999999999), "#FAIL"))))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 999999999999), "#FAIL"))))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 999999), "#FAIL"))))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 9999999), "#FAIL"))))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 99999999), "#FAIL"))))
system.time("#FAIL" %in% c(rep(c("#GOOD", "fuck"), 99999999))
)
system.time("#FAIL" %in% c(rep(c("#GOOD", "fuck"), 99999999)))
system.time("#FAIL" %in% c(rep(c("#GOOD", "fuck"), 99999999)))
system.time("#FAIL" %in% c(rep(c("#GOOD", "fuck"), 99999999)))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 99999999), "#FAIL"))))
system.time("#FAIL" %in% c(rep(c("#GOOD", "fuck"), 99999999)))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 99999999), "#FAIL"))))
system.time("#FAIL" %in% c(rep(c("#GOOD", "fuck"), 99999999)))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 99999999), "#FAIL"))))
system.time("#FAIL" %in% c(rep(c("#GOOD", "fuck"), 99999999)))
system.time(as.logical(match(x = "#FAIL", table = c(rep(c("#GOOD", "fuck"), 99999999), "#FAIL"))))
library(wx3)
library(wx3)
library(wx3)
library(wx3)
usethis::use_package("httr2")
library(wx3)
library(wx3)
library(wx3)
"#FAIL" %in% list(a = "#FAIL", b = "fjasfjasf")
"#FAIL" %in% list(a = c("#FAIL"), b = "fjasfjasf")
"#FAIL" %in% list(a = c("#FAIL", "fjiasfjos"), b = "fjasfjasf")
dplyr::row_number()
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
file.size("fjsakfjsoaf.xlsx")
file.size("fjsakfjsoaf.xlsx") >= 1
if(file.size("fjsakfjsoaf.xlsx") >= 1)
{"hiosdjf"}
match(x = "#GOOD", table = c("asfsdf", "fasdfsda", "#GOOD"))
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
rep(x = "HI", 213)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
curl::has_internet()
curl::has_internet()
curl::has_internet()
curl::has_internet()
curl::nslookup()
curl::nslookup(host = "google.coim")
curl::nslookup(host = "google.com")
curl::nslookup(host = "google.com")
curl::nslookup(host = "google.com")
curl::nslookup(host = "google.com")
curl::nslookup(host = "google.com")
curl::nslookup(host = "google.com")
as.logical("fhasdjkfhjkaf")
is.character("fhasdjkfhjkaf")
is.character(curl::nslookup(host = "google.com"))
tryCatch(expr = is.character(curl::nslookup(host = "google.com")),
error = function(e){FALSE})
tryCatch(expr = is.character(curl::nslookup(host = "google.com")),
error = function(e){FALSE})
library(wx3)
library(wx3)
usethis::use_r("sys-has_internet")
library(wx3)
sys_hasInternet()
sys_hasInternet()
library(wx3)
sys_hasInternet()
wx3:::sys_hasInternet()
library(wx3)
system.file("sys_hasInternet.txt", package = "wx3")
system.file("sys_hasInternet.txt", package = "wx3")
library(wx3)
system.file("sys_hasInternet.txt", package = "wx3")
system.file("sys_hasInternet", package = "wx3")
system.file(package = "wx3")
system.file(package = "wx3", "sys_hasInternet.txt")
return(system.file("extdata", "sys_hasInternet.txt", package = "snd"))
system.file("extdata", "sys_hasInternet.txt", package = "")
system.file("extdata", "sys_hasInternet.txt", package = "wx3")
system.file("extdata", "sys_hasInternet.txt", package = "wx3")
readBin(con = system.file("extdata", "sys_hasInternet.txt", package = "wx3"))
readBin(con = system.file("extdata", "sys_hasInternet.txt", package = "wx3"), what = "character")
readLines()
readLines(con = system.file("extdata", "sys_hasInternet.txt", package = "wx3"))
read.delim(file = system.file("extdata", "sys_hasInternet.txt", package = "wx3"), sep = ";")
read.delim(file = system.file("extdata", "sys_hasInternet.txt", package = "wx3"), sep = ";")
read.delim(file = system.file("extdata", "sys_hasInternet.txt", package = "wx3"), sep = ";")
?read.delim
readLines(con = system.file("extdata", "sys_hasInternet.txt", package = "wx3"))
stringr::str_split_1(readLines(con = system.file("extdata", "sys_hasInternet.txt", package = "wx3")), pattern = ";")
trimws(stringr::str_split_1(readLines(con = system.file("extdata", "sys_hasInternet.txt", package = "wx3")), pattern = ";"))
trimws(stringr::str_split_1(readLines(con = system.file("extdata", "sys_hasInternet.txt", package = "wx3")), pattern = ";"))
if(is.null(test_host)){
test_host = trimws(stringr::str_split_1(readLines(con = system.file("extdata", "sys_hasInternet.txt", package = "wx3")), pattern = ";"))
}
library(wx3)
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
system.time(wx3:::sys_hasInternet())
library(wx3)
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
expand.grid(list(1,2,3))
expand.grid(list(1,2,3), list(3,4,5))
library(wx3)
expand.grid(list(1,2,3), list(3,4,5))
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
library(wx3)
wx3:::sys_hasInternet()
library(wx3)
wx3:::sys_hasInternet()
library(wx3)
?expand.grid
library(wx3)
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
library(wx3)
wx3:::sys_hasInternet()
wx3:::sys_hasInternet()
library(wx3)
library(wx3)
library(wx3)
match(1, c(3123,1,12132132))
?dir.create()
paste0("list_TMP[[", 123, "]] = '", "fdkjsafjl", "'"))
paste0("list_TMP[[", 123, "]] = '", "fdkjsafjl", "'")
library(wx3)
library(wx3)
82+43
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
hi = rep(x = NA_integer_, 33)
hi[[1]] = 1
library(wx3)
library(wx3)
library(wx3)
eval(expr = parse(text = "sdfkjfkda = 123"))
eval(expr = parse(text = "sdfkjfkda[[2]] = 123"))
library(wx3)
library(wx3)
paste0("hfsdjfkallkf", "fjasfjaskf")
paste0("hfsdjfkallkf", "+")
paste0("1", "+", "1")
eval(expr = parse(paste0("1", "+", "1")))
eval(expr = parse(text = paste0("1", "+", "1")))
eval(expr = parse(text = paste0("1", "+", "1")))
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
usethis::use_r("load_fileset_engine")
library(wx3)
library(wx3)
library(wx3)
usethis::use_r("load_file")
usethis::use_r("load_file_engine")
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
usethis::use_r("load")
library(wx3)
library(wx3)
library(wx3)
library(wx3)
?in
??in
?%in%
??%in%
library(wx3)
library(wx3)
library(wx3)
library(wx3)
usethis::use_r("calc_smoothLm")
library(wx3)
library(wx3)
?dplyr::group_by
library(wx3)
?calc_smooth_lm
library(wx3)
#' @examples sys_hasInternet()
sys_hasInternet()
wx3:::sys_hasInternet()
wx3:::sys_abort_NoArg()
library(wx3)
source("C:/Users/caroluskwok/Desktop/R Dev/wx3/R/sys-msg_warn.R", echo=TRUE)
wx3:::sys_warn(message = "test")
library(wx3)
library(wx3)
usethis::use_package("call")
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
library(wx3)
usethis::use_mit_license()
usethis::use_mit_license()
usethis::use_package("tidyr")
usethis::use_package("furrr")
usethis::use_package("furrr")
usethis::use_package("furrr")
usethis::use_package("curl")
usethis::use_package("curl")
library(wx3)
library(wx3)
